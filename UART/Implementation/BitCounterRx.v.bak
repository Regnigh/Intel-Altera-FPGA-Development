module BitCounterRx
(
	clk,
	clk_baud,
	reset,
	clear,
	bit_counter
);

input			clk;
input			clk_baud;
input			reset;
input			clear;

output 	[3:0]	bit_counter;

reg	 	[3:0]	bit_counter;


always @(posedge clk or negedge reset)
begin	
	if(!reset)
		bit_counter <= 4'b0000;
		
	else if(clear)
		bit_counter <= 4'b0000;
		
	else if(!clear && clk_baud)
		bit_counter <= bit_counter + 1;
end
endmodule